{
    "ignoreKeys":[
        "dart:core@Record",
        "package:flutter/src/widgets/routes.dart@FocusTrap",
        "dart:html",
        "dart:html_common",
        "dart:indexed_db",
        "dart:mirrors",
        "dart:cli",
        "dart:svg",
        "dart:web_audio",
        "dart:web_gl",
        "dart:nativewrappers",
        "dart:js",
        "dart:js_util",
        "dart:js_interop",
        "dart:ffi@VarArgs@#as",
        "dart:ffi@VarArgs@#is"
    ],
    "libraryIgnoreImports":{
        "dart:ui": [
            "dart:ffi", 
            "dart:convert"
        ],
        "package:flutter/src/foundation/bitfield.dart": [
            "package:flutter/src/foundation/_bitfield_io.dart"
        ],
        "package:flutter/src/foundation/isolates.dart": [
            "package:flutter/src/foundation/_isolates_io.dart"
        ],
        "package:flutter/src/foundation/_isolates_io.dart": [
            "package:flutter/src/foundation/isolates.dart"
        ],
        "package:flutter/src/painting/image_provider.dart": [
            "package:flutter/src/painting/_network_image_io.dart"
        ],
        "package:flutter/src/painting/_network_image_io.dart": [
            "package:flutter/src/painting/image_provider.dart"
        ],
        "package:flutter/src/foundation/_bitfield_io.dart": [
            "package:flutter/src/foundation/bitfield.dart"
        ],
        "package:flutter/src/foundation/capabilities.dart": [
            "package:flutter/src/foundation/_capabilities_io.dart"
        ],
        "package:flutter/src/foundation/platform.dart": [
            "package:flutter/src/foundation/_platform_io.dart"
        ],
        "package:flutter/src/foundation/_platform_io.dart": [
            "package:flutter/src/foundation/platform.dart"
        ],
        "package:flutter/src/rendering/error.dart":[
          "package:flutter/src/rendering/object.dart"
        ]
        
    },
    "libraryAddImports":{
        "package:flutter/src/widgets/shared_app_data.dart": [
            ["package:flutter/widgets.dart",[],[]]
        ],
        "package:flutter/src/widgets/spell_check.dart": [
          ["package:flutter/widgets.dart",[],[]]
            
        ],
        "package:flutter/src/widgets/scroll_aware_image_provider.dart": [
            ["dart:ui",[],[]],
            ["dart:typed_data",[],[]]
        ],
        "package:flutter/src/material/autocomplete.dart": [
          ["dart:async",[],[]]
            
        ],
        "package:flutter/src/rendering/error.dart":[
          ["package:flutter/src/rendering/object.dart",["EdgeInsets","Color"],["TextStyle"]]
        ],
        "package:flutter/src/widgets/focus_scope.dart":[
          ["package:flutter/widgets.dart",[],[]]
        ]
        
    },
    "defaultValueCodeOverwrites":{
      "dart:ui@Shadow@":{
        "const Color(_kColorDefault)":"const Color(0xFF000000)"
      },
      "package:flutter/src/cupertino/activity_indicator.dart@CupertinoActivityIndicator@partiallyRevealed":{
        "_kDefaultIndicatorRadius":"10.0"
      },
      "dart:ui@Gradient@sweep":{
        "math.pi * 2":"pi * 2"
      },
      "package:flutter/src/cupertino/activity_indicator.dart@CupertinoActivityIndicator@":{
        "_kDefaultIndicatorRadius":"10.0"
      },
      "package:flutter/src/cupertino/bottom_tab_bar.dart@CupertinoTabBar@":{
        "const Border(top: BorderSide(color: _kDefaultTabBarBorderColor, width: 0.0))":"const Border(top: BorderSide(color: const CupertinoDynamicColor.withBrightness(color: Color(0x4D000000),darkColor: Color(0x29000000),), width: 0.0))",
        "_kTabBarHeight":"50.0",
        "_kDefaultTabBarInactiveColor":"CupertinoColors.inactiveGray"
      },
      "package:flutter/src/cupertino/context_menu.dart@CupertinoContextMenu@":{
        "_defaultPreviewBuilder":"(BuildContext context, Animation<double> animation, Widget child) {return FittedBox(fit: BoxFit.cover,child: ClipRRect(borderRadius: BorderRadius.circular(12.0 * animation.value),child: child,),);}"
      },
      "package:flutter/src/cupertino/list_section.dart@CupertinoListSection@":{
        "_kBaseDividerMargin":"20.0",
        "_kDefaultRowsMargin":"EdgeInsets.only(bottom: 8.0)",
        "_kMarginTop":"22.0"
      },
      "package:flutter/src/cupertino/list_tile.dart@CupertinoListTile@":{
        "_kLeadingSize":"28.0",
        "_kLeadingToTitle":"16.0"
      },
      "package:flutter/src/cupertino/list_tile.dart@CupertinoListTile@notched":{
        "_kNotchedLeadingSize":"30.0",
        "_kNotchedLeadingToTitle":"12.0"
      },
      "package:flutter/src/cupertino/magnifier.dart@CupertinoMagnifier@":{
        "kDefaultSize":"CupertinoMagnifier.kDefaultSize"
      },
      "package:flutter/src/cupertino/picker.dart@CupertinoPicker@":{
        "_kDefaultDiameterRatio":"1.07",
        "_kSqueeze":"1.45"
      },
      "package:flutter/src/cupertino/picker.dart@CupertinoPicker@builder":{
        "_kDefaultDiameterRatio":"1.07",
        "_kSqueeze":"1.45"
      },
      "package:flutter/src/cupertino/refresh.dart@CupertinoSliverRefreshControl@":{
        "buildRefreshIndicator":"CupertinoSliverRefreshControl.buildRefreshIndicator",
        "_defaultRefreshIndicatorExtent":"60.0",
        "_defaultRefreshTriggerPullDistance":"100.0"
      },
      "package:flutter/src/cupertino/route.dart@CupertinoDialogRoute@":{
        "_buildCupertinoDialogTransitions":"(BuildContext context, Animation<double> animation, Animation<double> secondaryAnimation, Widget child) {final CurvedAnimation fadeAnimation = CurvedAnimation(parent: animation,curve: Curves.easeInOut,);if (animation.status == AnimationStatus.reverse) {return FadeTransition(opacity: fadeAnimation,child: child,);}return FadeTransition(opacity: fadeAnimation,child: ScaleTransition(scale: animation.drive(Tween<double>(begin: 1.3, end: 1.0)),child: child,),);}"
      },
      "package:flutter/src/cupertino/scrollbar.dart@CupertinoScrollbar@":{
        "defaultRadius":"CupertinoScrollbar.defaultRadius",
        "defaultRadiusWhileDragging":"CupertinoScrollbar.defaultRadiusWhileDragging",
        "defaultThickness":"CupertinoScrollbar.defaultThickness",
        "defaultThicknessWhileDragging":"CupertinoScrollbar.defaultThicknessWhileDragging"
      },
      "package:flutter/src/cupertino/sliding_segmented_control.dart@CupertinoSlidingSegmentedControl@":{
        "_kHorizontalItemPadding":"EdgeInsets.symmetric(vertical: 2, horizontal: 3)",
        "_kThumbColor":"CupertinoDynamicColor.withBrightness(color: Color(0xFFFFFFFF),darkColor: Color(0xFF636366),)"
      },
      "package:flutter/src/cupertino/text_field.dart@CupertinoTextField@":{
        "_defaultContextMenuBuilder":"(BuildContext context, EditableTextState editableTextState) {return CupertinoAdaptiveTextSelectionToolbar.editableText(editableTextState: editableTextState,);}",
        "_kDefaultRoundedBorderDecoration":"const BoxDecoration(color: CupertinoDynamicColor.withBrightness(color: CupertinoColors.white,darkColor: CupertinoColors.black,),border: Border(top: BorderSide(color: CupertinoDynamicColor.withBrightness(color: Color(0x33000000),darkColor: Color(0x33FFFFFF),),width: 0.0,),bottom: BorderSide(color: CupertinoDynamicColor.withBrightness(color: Color(0x33000000),darkColor: Color(0x33FFFFFF),),width: 0.0,),left: BorderSide(color: CupertinoDynamicColor.withBrightness(color: Color(0x33000000),darkColor: Color(0x33FFFFFF),),width: 0.0,),right: BorderSide(color: CupertinoDynamicColor.withBrightness(color: Color(0x33000000),darkColor: Color(0x33FFFFFF),),width: 0.0,),),borderRadius: BorderRadius.all(Radius.circular(5.0)),)",
        "ui.BoxHeightStyle.tight":"BoxHeightStyle.tight",
        "ui.BoxWidthStyle.tight":"BoxWidthStyle.tight"
      },
      "package:flutter/src/cupertino/text_field.dart@CupertinoTextField@borderless":{
        "_defaultContextMenuBuilder":"(BuildContext context, EditableTextState editableTextState) {return CupertinoAdaptiveTextSelectionToolbar.editableText(editableTextState: editableTextState,);}",
        "_kDefaultPlaceholderStyle":"TextStyle(fontWeight: FontWeight.w400,color: CupertinoColors.placeholderText,)",
        "ui.BoxHeightStyle.tight":"BoxHeightStyle.tight",
        "ui.BoxWidthStyle.tight":"BoxWidthStyle.tight"
    },
    "package:flutter/src/cupertino/text_form_field_row.dart@CupertinoTextFormFieldRow@":{
        "_defaultContextMenuBuilder":"(BuildContext context, EditableTextState editableTextState) {return CupertinoAdaptiveTextSelectionToolbar.editableText(editableTextState: editableTextState,);}"
    },
    "package:flutter/src/widgets/scrollable_helpers.dart@EdgeDraggingAutoScroller@":{
        "_kDefaultAutoScrollVelocityScalar":"7"
    },
    "package:flutter/src/widgets/scrollbar.dart@RawScrollbar@":{
        "_kScrollbarFadeDuration":"const Duration(milliseconds: 300)",
        "_kMinThumbExtent":"18.0",
        "_kScrollbarTimeToFade":"const Duration(milliseconds: 600)"
    },
    "package:flutter/src/cupertino/thumb_painter.dart@CupertinoThumbPainter@":{
        "_kSliderBoxShadows":"const <BoxShadow> [BoxShadow(color: Color(0x26000000),offset: Offset(0, 3),blurRadius: 8.0,),BoxShadow(color: Color(0x29000000),offset: Offset(0, 1),blurRadius: 1.0,),BoxShadow(color: Color(0x1A000000),offset: Offset(0, 3),blurRadius: 1.0,),]"
    },
    "package:flutter/src/gestures/force_press.dart@ForcePressGestureRecognizer@":{
      "_inverseLerp":"(double min, double max, double t) {assert(min <= max);double value = (t - min) / (max - min);if (!value.isNaN) {value = clampDouble(value, 0.0, 1.0);}return value;}"
    },
    "package:flutter/src/material/app_bar.dart@SliverAppBar@medium":{
      "_MediumScrollUnderFlexibleConfig.collapsedHeight":"64.0"
    },
    "package:flutter/src/material/app_bar.dart@SliverAppBar@large":{
      "_LargeScrollUnderFlexibleConfig.collapsedHeight":"64.0"
    },
    "package:flutter/src/widgets/scroll_delegate.dart@SliverChildListDelegate@fixed":{
      "_kDefaultSemanticIndexCallback":"(Widget _, int localIndex) => localIndex"
    }
    ,
    "package:flutter/src/widgets/scroll_delegate.dart@SliverChildListDelegate@":{
      "_kDefaultSemanticIndexCallback":"(Widget _, int localIndex) => localIndex"
    },
    "package:flutter/src/widgets/pages.dart@PageRouteBuilder@":{
      "_defaultTransitionsBuilder":"(BuildContext context, Animation<double> animation, Animation<double> secondaryAnimation, Widget child) {return child;}"
    },
    "package:flutter/src/widgets/navigator.dart@RestorableRouteFuture@":{
      "_defaultNavigatorFinder":"(BuildContext context) => Navigator.of(context)"
    },
    "package:flutter/src/widgets/navigation_toolbar.dart@NavigationToolbar@":{
      "kMiddleSpacing":"NavigationToolbar.kMiddleSpacing"
    },
    "package:flutter/src/widgets/media_query.dart@MediaQueryData@":{
      "const <ui.DisplayFeature>[]":"const <DisplayFeature>[]"
    },
    "package:flutter/src/widgets/editable_text.dart@EditableText@":{
      "ui.BoxHeightStyle.tight":"BoxHeightStyle.tight",
      "ui.BoxWidthStyle.tight":"BoxWidthStyle.tight"
    },
    "package:flutter/src/widgets/animated_cross_fade.dart@AnimatedCrossFade@":{
      "defaultLayoutBuilder":"AnimatedCrossFade.defaultLayoutBuilder"
    },
    "package:flutter/src/rendering/editable.dart@RenderEditable@":{
      "ui.BoxHeightStyle.tight":"BoxHeightStyle.tight",
      "ui.BoxWidthStyle.tight":"BoxWidthStyle.tight"
    },
    "package:flutter/src/physics/tolerance.dart@Tolerance@":{
      "_epsilonDefault":"1e-3"
    },
    "package:flutter/src/painting/box_shadow.dart@BoxShadow@":{
      "const Color(_kColorDefault)":"const Color(0xFF000000)"
    },
    "package:flutter/src/painting/borders.dart@BorderSide@":{
      "strokeAlignInside":"BorderSide.strokeAlignInside"
    },
    "package:flutter/src/material/text_selection_toolbar.dart@TextSelectionToolbar@":{
      "_defaultToolbarBuilder":"(BuildContext context, Widget child) {return Material(borderRadius:const BorderRadius.all(Radius.circular(7.0)),clipBehavior: Clip.antiAlias,elevation: 1.0,type: MaterialType.card,child: child,);}"
    },
    "package:flutter/src/material/dialog.dart@Dialog@":{
      "_defaultInsetPadding":"const EdgeInsets.symmetric(horizontal: 40.0, vertical: 24.0)"
    },
    "package:flutter/src/material/dialog.dart@AlertDialog@":{
      "_defaultInsetPadding":"const EdgeInsets.symmetric(horizontal: 40.0, vertical: 24.0)"
    },
    "package:flutter/src/material/dialog.dart@SimpleDialog@":{
      "_defaultInsetPadding":"const EdgeInsets.symmetric(horizontal: 40.0, vertical: 24.0)"
    },
    "package:flutter/src/material/page_transitions_theme.dart@PageTransitionsTheme@":{
      "_defaultBuilders":"<TargetPlatform, PageTransitionsBuilder>{TargetPlatform.android: ZoomPageTransitionsBuilder(),TargetPlatform.iOS: CupertinoPageTransitionsBuilder(),TargetPlatform.macOS: CupertinoPageTransitionsBuilder(),}"
    },
    "package:flutter/src/material/expansion_panel.dart@ExpansionPanelList@":{
      "_kPanelHeaderExpandedDefaultPadding":"const EdgeInsets.symmetric(vertical: 64.0 - 48.0,)"
    },
    "package:flutter/src/material/expansion_panel.dart@ExpansionPanelList@radio":{
      "_kPanelHeaderExpandedDefaultPadding":"const EdgeInsets.symmetric(vertical: 64.0 - 48.0,)"
    },
    "package:flutter/src/material/ink_highlight.dart@InkHighlight@":{
      "_kDefaultHighlightFadeDuration":"const Duration(milliseconds: 200)"
    },
    "package:flutter/src/material/magnifier.dart@Magnifier@":{
      "const BorderRadius.all(Radius.circular(_borderRadius))":"const BorderRadius.all(Radius.circular(40))"
    },
    "package:flutter/src/material/menu_anchor.dart@MenuAcceleratorLabel@":{
      "defaultLabelBuilder":"MenuAcceleratorLabel.defaultLabelBuilder"
    },
    "package:flutter/src/material/popup_menu.dart@PopupMenuDivider@":{
      "_kMenuDividerHeight":"16.0"
    },
    "package:flutter/src/material/progress_indicator.dart@RefreshProgressIndicator@":{
      "defaultStrokeWidth":"RefreshProgressIndicator.defaultStrokeWidth"
    },
    "package:flutter/src/material/selectable_text.dart@SelectableText@":{
      "_defaultContextMenuBuilder":"(BuildContext context, EditableTextState editableTextState) {return AdaptiveTextSelectionToolbar.editableText(editableTextState: editableTextState,);}",
      "ui.BoxHeightStyle.tight":"BoxHeightStyle.tight",
      "ui.BoxWidthStyle.tight":"BoxWidthStyle.tight"
    },
    "package:flutter/src/material/paginated_data_table.dart@PaginatedDataTable@":{
      "const <int>[defaultRowsPerPage, defaultRowsPerPage * 2, defaultRowsPerPage * 5, defaultRowsPerPage * 10]":"const <int>[PaginatedDataTable.defaultRowsPerPage, PaginatedDataTable.defaultRowsPerPage * 2, PaginatedDataTable.defaultRowsPerPage * 5, PaginatedDataTable.defaultRowsPerPage * 10]",
      "PaginatedDataTable":"PaginatedDataTable.defaultRowsPerPage"
    },
    "package:flutter/src/material/selectable_text.dart@SelectableText@rich":{
      "_defaultContextMenuBuilder":"(BuildContext context, EditableTextState editableTextState) {return AdaptiveTextSelectionToolbar.editableText(editableTextState: editableTextState,);}",
      "ui.BoxHeightStyle.tight":"BoxHeightStyle.tight",
      "ui.BoxWidthStyle.tight":"BoxWidthStyle.tight"
    },
    "package:flutter/src/material/selection_area.dart@SelectionArea@":{
      "_defaultContextMenuBuilder":"(BuildContext context, SelectableRegionState selectableRegionState) {return AdaptiveTextSelectionToolbar.selectableRegion(selectableRegionState: selectableRegionState,);}"
    },
    "package:flutter/src/material/snack_bar.dart@SnackBar@":{
      "_snackBarDisplayDuration":"const Duration(milliseconds: 4000)"
    },
    "package:flutter/src/material/text_field.dart@TextField@":{
      "_defaultContextMenuBuilder":"(BuildContext context, EditableTextState editableTextState) {return AdaptiveTextSelectionToolbar.editableText(editableTextState: editableTextState,);}",
      "ui.BoxHeightStyle.tight":"BoxHeightStyle.tight",
      "ui.BoxWidthStyle.tight":"BoxWidthStyle.tight"
    },
    "package:flutter/src/material/text_form_field.dart@TextFormField@":{
      "_defaultContextMenuBuilder":"(BuildContext context, EditableTextState editableTextState) {return AdaptiveTextSelectionToolbar.editableText(editableTextState: editableTextState,);}"
    },
    "package:flutter/src/widgets/scroll_delegate.dart@SliverChildBuilderDelegate@":{
      "_kDefaultSemanticIndexCallback":"(Widget _, int localIndex) => localIndex"
    },
    "package:flutter/src/cupertino/nav_bar.dart@CupertinoNavigationBar@":{
      "_kDefaultNavBarBorder":"const Border(bottom: BorderSide(color: Color(0x4D000000),width: 0.0, ),)"
    },
    "package:flutter/src/cupertino/nav_bar.dart@CupertinoSliverNavigationBar@":{
      "_kDefaultNavBarBorder":"const Border(bottom: BorderSide(color: Color(0x4D000000),width: 0.0, ),)"
    },
    "package:flutter/src/material/navigation_bar.dart@NavigationIndicator@":{
      "_kIndicatorHeight":"32",
      "_kIndicatorWidth":"64"
    },
    "package:flutter/src/painting/gradient.dart@SweepGradient@":{
        "math.pi * 2":"pi * 2"
    },
    "package:flutter/src/rendering/layer.dart":{
      
    }
    
    },
    "keyOverwrites":{
      "dart:math@MutableRectangle@":"(m.Scope scope) =><T extends num>(left, top, width, height) {return MutableRectangle<T>(left, top, width, height);}",
      "dart:math@Rectangle@":"(m.Scope scope) =><T extends num>(left, top, width, height) {return Rectangle<T>(left, top, width, height);}",
      "dart:math@Point@":"(m.Scope scope) => <T extends num>(x, y) {return Point<T>(x, y);}",
      "dart:collection@LinkedList@":"(m.Scope scope)=><E extends LinkedListEntry<E>>(){return LinkedList<E>();}",
      "package:flutter/src/cupertino/nav_bar.dart@CupertinoNavigationBar@":"(m.Scope scope) => ({automaticallyImplyLeading,automaticallyImplyMiddle,backgroundColor,border,brightness,heroTag,key,leading,middle,padding,previousPageTitle,trailing,transitionBetweenRoutes}) {if (heroTag == null) {return CupertinoNavigationBar(automaticallyImplyLeading:automaticallyImplyLeading ?? true,automaticallyImplyMiddle: automaticallyImplyMiddle ?? true,backgroundColor: backgroundColor,border: border ??const Border(bottom: BorderSide(color: Color(0x4D000000),width: 0.0,),),brightness: brightness,key: key,leading: leading,middle: middle,padding: padding,previousPageTitle: previousPageTitle,trailing: trailing,transitionBetweenRoutes: transitionBetweenRoutes ?? true);}return CupertinoNavigationBar(automaticallyImplyLeading: automaticallyImplyLeading ?? true,automaticallyImplyMiddle: automaticallyImplyMiddle ?? true,backgroundColor: backgroundColor,border: border ?? const Border(bottom: BorderSide(color: Color(0x4D000000),width: 0.0,),),brightness: brightness,heroTag: heroTag,key: key,leading: leading,middle: middle,padding: padding,previousPageTitle: previousPageTitle,trailing: trailing,transitionBetweenRoutes: transitionBetweenRoutes ?? true);}",
      "package:flutter/src/cupertino/nav_bar.dart@CupertinoSliverNavigationBar@":"(m.Scope scope) => ({alwaysShowMiddle,automaticallyImplyLeading,automaticallyImplyTitle,backgroundColor,border,brightness,heroTag,key,largeTitle,leading,middle,padding,previousPageTitle,stretch,trailing,transitionBetweenRoutes}) {if (heroTag == null) {return CupertinoSliverNavigationBar(alwaysShowMiddle: alwaysShowMiddle ?? true,automaticallyImplyLeading:automaticallyImplyLeading ?? true,automaticallyImplyTitle: automaticallyImplyTitle ?? true,backgroundColor: backgroundColor,border: border ??const Border(bottom: BorderSide(color: Color(0x4D000000),width: 0.0,),),brightness: brightness,key: key,largeTitle: largeTitle,leading: leading,middle: middle,padding: padding,previousPageTitle: previousPageTitle,stretch: stretch ?? false,trailing: trailing,transitionBetweenRoutes: transitionBetweenRoutes ?? true);}return CupertinoSliverNavigationBar(alwaysShowMiddle: alwaysShowMiddle ?? true,automaticallyImplyLeading: automaticallyImplyLeading ?? true,automaticallyImplyTitle: automaticallyImplyTitle ?? true,backgroundColor: backgroundColor,border: border ??const Border(bottom: BorderSide(color: Color(0x4D000000),width: 0.0,),),brightness: brightness,heroTag: heroTag,key: key,largeTitle: largeTitle,leading: leading,middle: middle,padding: padding,previousPageTitle: previousPageTitle,stretch: stretch ?? false,trailing: trailing,transitionBetweenRoutes: transitionBetweenRoutes ?? true);}",
      "package:flutter/src/cupertino/text_selection_toolbar.dart@CupertinoTextSelectionToolbar@":"(m.Scope scope) =>({anchorAbove, anchorBelow, children, key, toolbarBuilder}) {if (toolbarBuilder == null) {return CupertinoTextSelectionToolbar(anchorAbove: anchorAbove,anchorBelow: anchorBelow,children: children,key: key);}Widget toolbarBuilderProxy(context, anchor, isAbove, child) {return engine.callFunctionPointer(scope, toolbarBuilder!,[context, anchor, isAbove, child], {});}return CupertinoTextSelectionToolbar(anchorAbove: anchorAbove,anchorBelow: anchorBelow,children: children,key: key,toolbarBuilder: toolbarBuilderProxy);}",
      "package:flutter/src/material/autocomplete.dart@Autocomplete@":"(m.Scope scope) =><T extends Object>({displayStringForOption,fieldViewBuilder,initialValue,key,onSelected,optionsBuilder,optionsMaxHeight,optionsViewBuilder}) {String displayStringForOptionProxy<T>(option) {return engine.callFunctionPointer(scope, displayStringForOption!, [option], {});}Widget fieldViewBuilderProxy(context, textEditingController, focusNode, onFieldSubmitted) {return engine.callFunctionPointer(scope,fieldViewBuilder!,[context, textEditingController, focusNode, onFieldSubmitted],{});}void onSelectedProxy<T>(option) {engine.callFunctionPointer(scope, onSelected!, [option], {});}FutureOr<Iterable<T>> optionsBuilderProxy(textEditingValue) async {return await engine.callFunctionPointerAsync(scope, optionsBuilder!, [textEditingValue], {});}Widget optionsViewBuilderProxy<T>(context, onSelected, options) {return engine.callFunctionPointer(scope, optionsViewBuilder!, [context, onSelected, options], {});}return Autocomplete<T>(displayStringForOption: displayStringForOption == null? RawAutocomplete.defaultStringForOption: displayStringForOptionProxy,fieldViewBuilder: fieldViewBuilder == null? (BuildContext context,TextEditingController textEditingController,FocusNode focusNode,VoidCallback onFieldSubmitted) {return TextFormField(controller: textEditingController,focusNode: focusNode,onFieldSubmitted: (String value) {onFieldSubmitted();},);}: fieldViewBuilderProxy,initialValue: initialValue,key: key,onSelected: onSelected == null ? null : onSelectedProxy,optionsBuilder: optionsBuilderProxy,optionsMaxHeight: optionsMaxHeight ?? 200.0,optionsViewBuilder: optionsViewBuilder == null ? null : optionsViewBuilderProxy);}",
      "package:flutter/src/material/floating_action_button.dart@FloatingActionButton@small":"(m.Scope scope) => ({autofocus,backgroundColor,child,clipBehavior,disabledElevation,elevation,enableFeedback,focusColor,focusElevation,focusNode,foregroundColor,heroTag,highlightElevation,hoverColor,hoverElevation,key,materialTapTargetSize,mouseCursor,onPressed,shape,splashColor,tooltip}) {void onPressedProxy() {engine.callFunctionPointer(scope, onPressed!, [], {});}if (heroTag == null) {return FloatingActionButton.small(autofocus: autofocus ?? false,backgroundColor: backgroundColor,child: child,clipBehavior: clipBehavior ?? Clip.none,disabledElevation: disabledElevation,elevation: elevation,enableFeedback: enableFeedback,focusColor: focusColor,focusElevation: focusElevation,focusNode: focusNode,foregroundColor: foregroundColor,highlightElevation: highlightElevation,hoverColor: hoverColor,hoverElevation: hoverElevation,key: key,materialTapTargetSize: materialTapTargetSize,mouseCursor: mouseCursor,onPressed: onPressedProxy,shape: shape,splashColor: splashColor,tooltip: tooltip);}return FloatingActionButton.small(autofocus: autofocus ?? false,backgroundColor: backgroundColor,child: child,clipBehavior: clipBehavior ?? Clip.none,disabledElevation: disabledElevation,elevation: elevation,enableFeedback: enableFeedback,focusColor: focusColor,focusElevation: focusElevation,focusNode: focusNode,foregroundColor: foregroundColor,heroTag: heroTag,highlightElevation: highlightElevation,hoverColor: hoverColor,hoverElevation: hoverElevation,key: key,materialTapTargetSize: materialTapTargetSize,mouseCursor: mouseCursor,onPressed: onPressedProxy,shape: shape,splashColor: splashColor,tooltip: tooltip);}",
      "package:flutter/src/material/floating_action_button.dart@FloatingActionButton@large":"(m.Scope scope) => ({autofocus,backgroundColor,child,clipBehavior,disabledElevation,elevation,enableFeedback,focusColor,focusElevation,focusNode,foregroundColor,heroTag,highlightElevation,hoverColor,hoverElevation,key,materialTapTargetSize,mouseCursor,onPressed,shape,splashColor,tooltip}) {void onPressedProxy() {engine.callFunctionPointer(scope, onPressed!, [], {});}if(heroTag == null){return FloatingActionButton.large(autofocus: autofocus ?? false,backgroundColor: backgroundColor,child: child,clipBehavior: clipBehavior ?? Clip.none,disabledElevation: disabledElevation,elevation: elevation,enableFeedback: enableFeedback,focusColor: focusColor,focusElevation: focusElevation,focusNode: focusNode,foregroundColor: foregroundColor,highlightElevation: highlightElevation,hoverColor: hoverColor,hoverElevation: hoverElevation,key: key,materialTapTargetSize: materialTapTargetSize,mouseCursor: mouseCursor,onPressed: onPressedProxy,shape: shape,splashColor: splashColor,tooltip: tooltip);}return FloatingActionButton.large(autofocus: autofocus ?? false,backgroundColor: backgroundColor,child: child,clipBehavior: clipBehavior ?? Clip.none,disabledElevation: disabledElevation,elevation: elevation,enableFeedback: enableFeedback,focusColor: focusColor,focusElevation: focusElevation,focusNode: focusNode,foregroundColor: foregroundColor,heroTag: heroTag,highlightElevation: highlightElevation,hoverColor: hoverColor,hoverElevation: hoverElevation,key: key,materialTapTargetSize: materialTapTargetSize,mouseCursor: mouseCursor,onPressed: onPressedProxy,shape: shape,splashColor: splashColor,tooltip: tooltip);}",
      "package:flutter/src/material/floating_action_button.dart@FloatingActionButton@":"(m.Scope scope) => ({autofocus,backgroundColor,child,clipBehavior,disabledElevation,elevation,enableFeedback,focusColor,focusElevation,focusNode,foregroundColor,heroTag,highlightElevation,hoverColor,hoverElevation,isExtended,key,materialTapTargetSize,mini,mouseCursor,onPressed,shape,splashColor,tooltip}) {void onPressedProxy() {engine.callFunctionPointer(scope, onPressed!,[],{});}if (heroTag == null) {return FloatingActionButton(autofocus: autofocus ?? false,backgroundColor: backgroundColor,child: child,clipBehavior: clipBehavior ?? Clip.none,disabledElevation: disabledElevation,elevation: elevation,enableFeedback: enableFeedback,focusColor: focusColor,focusElevation: focusElevation,focusNode: focusNode,foregroundColor: foregroundColor,highlightElevation: highlightElevation,hoverColor: hoverColor,hoverElevation: hoverElevation,isExtended: isExtended ?? false,key: key,materialTapTargetSize: materialTapTargetSize,mini: mini ?? false,mouseCursor: mouseCursor,onPressed: onPressedProxy,shape: shape,splashColor: splashColor,tooltip: tooltip);}return FloatingActionButton(autofocus: autofocus ?? false,backgroundColor: backgroundColor,child: child,clipBehavior: clipBehavior ?? Clip.none,disabledElevation: disabledElevation,elevation: elevation,enableFeedback: enableFeedback,focusColor: focusColor,focusElevation: focusElevation,focusNode: focusNode,foregroundColor: foregroundColor,heroTag: heroTag,highlightElevation: highlightElevation,hoverColor: hoverColor,hoverElevation: hoverElevation,isExtended: isExtended ?? false,key: key,materialTapTargetSize: materialTapTargetSize,mini: mini ?? false,mouseCursor: mouseCursor,onPressed: onPressedProxy,shape: shape,splashColor: splashColor,tooltip: tooltip);}"
    }
}